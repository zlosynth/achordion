pub const LENGTH: usize = 256;

// 256 samples @ 44.1 KHz = 172.265625 Hz
pub const SIN: [u16; 256] = [
    2047, 2097, 2147, 2198, 2248, 2298, 2347, 2397, 2446, 2496, 2545, 2593, 2641, 2689, 2737, 2784,
    2831, 2877, 2922, 2968, 3012, 3056, 3100, 3142, 3185, 3226, 3267, 3307, 3346, 3384, 3422, 3459,
    3495, 3530, 3564, 3597, 3630, 3661, 3692, 3721, 3749, 3777, 3803, 3829, 3853, 3876, 3898, 3919,
    3939, 3957, 3975, 3991, 4006, 4020, 4033, 4045, 4055, 4064, 4072, 4079, 4085, 4089, 4092, 4094,
    4095, 4094, 4092, 4089, 4085, 4079, 4072, 4064, 4055, 4045, 4033, 4020, 4006, 3991, 3975, 3957,
    3939, 3919, 3898, 3876, 3853, 3829, 3803, 3777, 3749, 3721, 3692, 3661, 3630, 3597, 3564, 3530,
    3495, 3459, 3422, 3384, 3346, 3307, 3267, 3226, 3185, 3142, 3100, 3056, 3012, 2968, 2922, 2877,
    2831, 2784, 2737, 2689, 2641, 2593, 2545, 2496, 2446, 2397, 2347, 2298, 2248, 2198, 2147, 2097,
    2047, 1997, 1947, 1896, 1846, 1796, 1747, 1697, 1648, 1598, 1549, 1501, 1453, 1405, 1357, 1310,
    1263, 1217, 1172, 1126, 1082, 1038, 994, 952, 909, 868, 827, 787, 748, 710, 672, 635, 599, 564,
    530, 497, 464, 433, 402, 373, 345, 317, 291, 265, 241, 218, 196, 175, 155, 137, 119, 103, 88,
    74, 61, 49, 39, 30, 22, 15, 9, 5, 2, 0, 0, 0, 2, 5, 9, 15, 22, 30, 39, 49, 61, 74, 88, 103,
    119, 137, 155, 175, 196, 218, 241, 265, 291, 317, 345, 373, 402, 433, 464, 497, 530, 564, 599,
    635, 672, 710, 748, 787, 827, 868, 909, 952, 994, 1038, 1082, 1126, 1172, 1217, 1263, 1310,
    1357, 1405, 1453, 1501, 1549, 1598, 1648, 1697, 1747, 1796, 1846, 1896, 1947, 1997,
];

// 256 samples @ 44.1 KHz = 172.265625 Hz
pub const SAW: [u16; 256] = [
    2047, 0, 495, 224, 440, 298, 438, 345, 450, 384, 468, 419, 489, 452, 512, 483, 536, 514, 560,
    544, 585, 573, 610, 602, 636, 631, 662, 660, 688, 689, 714, 717, 740, 746, 766, 774, 793, 802,
    819, 830, 846, 858, 872, 886, 899, 914, 926, 942, 953, 970, 979, 998, 1006, 1025, 1033, 1053,
    1060, 1081, 1087, 1108, 1114, 1136, 1141, 1163, 1168, 1191, 1195, 1218, 1223, 1246, 1250, 1273,
    1277, 1301, 1304, 1328, 1332, 1356, 1359, 1383, 1386, 1410, 1413, 1437, 1441, 1465, 1468, 1492,
    1496, 1519, 1523, 1546, 1551, 1574, 1578, 1601, 1605, 1628, 1633, 1655, 1661, 1682, 1688, 1709,
    1716, 1736, 1743, 1763, 1771, 1790, 1798, 1817, 1826, 1844, 1854, 1871, 1881, 1898, 1909, 1925,
    1936, 1953, 1964, 1980, 1992, 2007, 2019, 2034, 2047, 2060, 2075, 2087, 2102, 2114, 2130, 2141,
    2158, 2169, 2185, 2196, 2213, 2223, 2240, 2250, 2268, 2277, 2296, 2304, 2323, 2331, 2351, 2358,
    2378, 2385, 2406, 2412, 2433, 2439, 2461, 2466, 2489, 2493, 2516, 2520, 2543, 2548, 2571, 2575,
    2598, 2602, 2626, 2629, 2653, 2657, 2681, 2684, 2708, 2711, 2735, 2738, 2762, 2766, 2790, 2793,
    2817, 2821, 2844, 2848, 2871, 2876, 2899, 2903, 2926, 2931, 2953, 2958, 2980, 2986, 3007, 3013,
    3034, 3041, 3061, 3069, 3088, 3096, 3115, 3124, 3141, 3152, 3168, 3180, 3195, 3208, 3222, 3236,
    3248, 3264, 3275, 3292, 3301, 3320, 3328, 3348, 3354, 3377, 3380, 3405, 3406, 3434, 3432, 3463,
    3458, 3492, 3484, 3521, 3509, 3550, 3534, 3580, 3558, 3611, 3582, 3642, 3605, 3675, 3626, 3710,
    3644, 3749, 3656, 3796, 3654, 3870, 3599, 4095,
];

// fn generate() {
//     let length = 256;
//     let range = 2_f64.powf(12.) - 1.;  // 12-bit dac
//     let pi = std::f64::consts::PI;
//     for x in 0..length {
//         let phase = (x as f64 / length as f64) * pi * 2.;
//         let y = (phase.sin() + 1.) / 2.;
//         print!("{}, ", (y * range) as u32);
//     }
// }
