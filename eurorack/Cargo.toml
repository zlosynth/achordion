[package]
authors = ["Petr Horáček <hrck@protonmail.com>"]
edition = "2018"
name = "achordion-eurorack"
version = "1.3.1" # hack/release.sh
license = "GPL-3.0-or-later"
description = "Chord-crafting quantizing wavetable oscillator module for Eurorack."
repository = "https://github.com/zlosynth/achordion"
readme = "../README.md"
publish = false

[dependencies]
cortex-m-rtic = { version = "0.5.8", default-features = false, features = ["cortex-m-7"] }
panic-halt = "0.2"
achordion-lib = { path = "../lib" }
achordion-bank = { path = "../bank", features = ["fft"] }
micromath = "1.1"
nb = "1"

# Requires custom branch with QSPI and split ADC
# TODO: HAL extended with QSPI support introduced by
# https://github.com/stm32-rs/stm32h7xx-hal/pull/230 and rebased on the current
# master. Once a new release is tagged, use it.
[dependencies.stm32h7xx-hal]
git = "https://github.com/stm32-rs/stm32h7xx-hal"
rev = "cd09880208a6d2a1ac5f77305fe687e1a49db8ea"
features = [ "stm32h750v", "rt", "revision_v" ]

# Requires custom branch with QSPI and split ADC
# TODO: BSP extended with Flash drivers
# https://github.com/antoinevg/daisy_bsp/pull/4, using rebased version of
# https://github.com/stm32-rs/stm32h7xx-hal/pull/230. Once the HAL PR gets
# merged, BSP PR should be rebased. This BSP rebase also fixes broken
# constructor API introduced in HAL 0.11.0, that too should be fixed once the PR
# gets in or once 0.11.0 comes out.
[dependencies.daisy_bsp]
git = "https://github.com/phoracek/daisy_bsp"
rev = "854c34539da2ced6e472d9b579b66e3623e2e10d"

[[bin]]
name = "achordion-eurorack"
test = false
bench = false

[profile.release]
codegen-units = 1 # better optimizations
debug = true # symbols are nice and they don't increase the size on flash
lto = true # better optimizations
opt-level = 3

[profile.release.package.achordion-bank]
opt-level = "z" # This contains code used only during the boot, no need for speed
