[package]
authors = ["Petr Horáček <hrck@protonmail.com>"]
edition = "2018"
name = "achordion-eurorack"
version = "2.2.0" # hack/release.sh
license = "GPL-3.0-or-later"
description = "Chord-crafting quantizing wavetable oscillator module for Eurorack."
repository = "https://github.com/zlosynth/achordion"
readme = "../README.md"
publish = false

[dependencies]
cortex-m-rtic = { version = "0.5.8", default-features = false, features = ["cortex-m-7"] }
panic-halt = "0.2"
achordion-lib = { path = "../lib" }
achordion-bank = { path = "../bank", features = ["fft"] }
micromath = "1.1"
nb = "1"
daisy = { version = "0.4.4", features = ["patch_sm"] }
stm32h7xx-hal = { version = "0.12.1", features = ["stm32h750v", "rt", "revision_v"] }

[[bin]]
name = "achordion-eurorack"
test = false
bench = false

[profile.release]
codegen-units = 1 # better optimizations
debug = true # symbols are nice and they don't increase the size on flash
lto = true # better optimizations
opt-level = 3

[profile.release.package.achordion-bank]
opt-level = "z" # This contains code used only during the boot, no need for speed

[profile.release.package.crc]
opt-level = "z" # CRC is only used while restoring a config on boot and does not need to be fast
